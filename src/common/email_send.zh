/*
 * This file is part of the bring.out knowhow ERP, a free and open source
 * Enterprise Resource Planning software suite,
 * Copyright (c) 1994-2018 by bring.out doo Sarajevo.
 * It is licensed to you under the Common Public Attribution License
 * version 1.0, the full text of which (including FMK specific Exhibits)
 * is available in the file LICENSE_CPAL_bring.out_knowhow.md located at the
 * root directory of this source code archive.
 * By using this software, you agree to be bound by its terms.
 */

#include "f18.zhh"

#include "simple_io.zhh"

// ---------------------------------------------------------
// hMailParams = zh_hash()
// attachments = {}
//
// koristi se na sljedeci nacin:
// -------------------------------------------------------
// // priprema podataka za slanje na osnovu parametara f18
// // sve sto ne navedemo bit ce dafault iz postavki
//
// hParams := f18_email_prepare( cSubject, cBody )
//
// // fajlovi za slanje
//
// _attach := { fajl1, fajl2, fajl3 } ili nil
//
// // glavna funkcija koja salje email na destinaciju
//
// f18_send_email( hParams, _attach )
//
//
// ---------------------------------------------------------
FUNCTION f18_send_email( hMailParams, aFiles )

LOCAL cBody
/*
FUNCTION tip_MailSend( cServer, nPort, cFrom, xTo, xCC, xBCC, cBody, cSubject, ;
      aFiles, cUser, cPass, cPopServer, nPriority, lRead, ;
      xTrace, lPopAuth, lNoAuth, nTimeOut, cReplyTo, ;
      lSSL, cSMTPPass, cCharset, cEncoding, cClientHost )
*/


   IF tip_MailSend( hMailParams[ "server" ], ;
         hMailParams[ "port" ], ;
         hMailParams[ "mail_from" ], ;
         hMailParams[ "mail_to" ], ;
         hMailParams[ "mail_cc" ], ;
         hMailParams[ "mail_bcc" ], ;
         hMailParams[ "mail_body" ], ;
         hMailParams[ "mail_subject" ], ;
         aFiles, ;
         hMailParams[ "user_name" ], ;
         hMailParams[ "user_password" ], ;
         "", ;
         NIL, ;
         NIL, ;
         hMailParams[ "trace" ], ;
         .F., ;
          hMailParams[ "no_auth" ], ;
         NIL, ;
         hMailParams[ "mail_reply_to" ], ;
         .F., ;
         hMailParams[ "smtp_password" ], ;
         "UTF-8", ;
         "" )

   ELSE
      error_bar( "email", "Email pristup ne radi !" )
      RETURN .F.

   ENDIF

   RETURN .T.



FUNCTION f18_email_prepare( cSubject, cBody, cFrom, cTo, cCC, cBCC, cReplyTo )

   LOCAL hParams := zh_Hash()

   hParams[ "trace" ] := .F.
   hParams[ "no_auth" ] := .T.
   hParams[ "server" ] := AllTrim( fetch_metric( "email_server", my_user(), "" ) )
   hParams[ "port" ] := fetch_metric( "email_port", my_user(), 25 )
   hParams[ "user_name" ] := AllTrim( fetch_metric( "email_user_name", my_user(), "" ) )
   hParams[ "user_password" ] := AllTrim( fetch_metric( "email_user_pass", my_user(), "" ) )
   hParams[ "smtp_password" ] := ""

   IF cFrom == NIL
      hParams[ "mail_from" ] := AllTrim( fetch_metric( "email_from", my_user(), "" ) )
   ELSE
      hParams[ "mail_from" ] := cFrom
   ENDIF
   IF cTo == NIL
      hParams[ "mail_to" ] := { AllTrim( fetch_metric( "email_to_default", my_user(), "" ) ) }
   ELSE
      hParams[ "mail_to" ] := get_email_array( cTo )
   ENDIF
   IF cCC == NIL
      hParams[ "mail_cc" ] := { AllTrim( fetch_metric( "email_cc_default", my_user(), "" ) ) }
   ELSE
      hParams[ "mail_cc" ] := get_email_array( cCC )
   ENDIF
   IF cBCC == NIL
      hParams[ "mail_bcc" ] := ""
   ELSE
      hParams[ "mail_bcc" ] := get_email_array( cBCC )
   ENDIF
   IF cReplyTo == NIL
      hParams[ "mail_reply_to" ] := ""
   ELSE
      hParams[ "mail_reply_to" ] := cReplyTo
   ENDIF
   IF cBody == NIL
      hParams[ "mail_body" ] := "empty cBody"
   ELSE
      hParams[ "mail_body" ] := cBody
   ENDIF
   IF cSubject == NIL
      hParams[ "mail_subject" ] := "empty cSubject"
   ELSE
      hParams[ "mail_subject" ] := cSubject
   ENDIF

   RETURN hParams



STATIC FUNCTION get_email_array( email_string )

   LOCAL aEmail := {}
   aEmail := TokToNiz( email_string, "," )

   RETURN aEmail


FUNCTION f18_email_test()

   LOCAL hParams
   LOCAL _subject := "Test email generated by Harbour"
   LOCAL _body := "Test email generated by Harbour & F18"
   LOCAL cTo := fetch_metric( "fakt_dokument_na_email", my_user(), "" )
   LOCAL _attach := nil

   IF Empty( cTo )
      MsgBeep( "Nije podesen primaoc u fakt/parametri/razno !!!" )
      RETURN .F.
   ENDIF

   hParams := f18_email_prepare( _subject, _body, NIL, cTo )
   f18_send_email( hParams, _attach )

   RETURN .T.




/*
   Opis: vraća hash matricu pripremljenu za slanje emaila u podršku
*/

FUNCTION email_podrska_bring_out( cSubject, cBody )

   LOCAL hParams, cFrom, cTo
   LOCAL cServer, nPort, cUser, cPassword


   cTo := "F18@bug.out.ba"
   cFrom := "F18@bug.out.ba"
#ifdef F18_DEBUG
   cServer := "192.168.168.1"
   //Alert("send email to " + cServer)
#else
   cServer := "smtp.bug.out.ba"
#endif
   nPort := 999
   cUser := "F18"
   cPassword := ""

   hParams := f18_email_prepare( cSubject, cBody, cFrom, cTo )
   hParams[ "server" ] := cServer
   hParams[ "port" ] := nPort
   hParams[ "user_name" ] := cUser
   hParams[ "user_password" ] := cPassword
   hParams[ "trace" ] := .F.
   hParams[ "mail_cc" ] := ""
   hParams[ "mail_bcc" ] := ""
   hParams[ "mail_reply_to" ] := ""

   RETURN hParams
